{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h7/common/c5-SuperSelect/AlternativeSuperSelect.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h6/HW6.module.css","p2-homeworks/h12/HW12.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h5/pages/Error404.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h1/MessageFromUser.tsx","p2-homeworks/h1/state.ts","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h7/common/c5-SuperSelect/AlternativeSuperSelect.tsx","p2-homeworks/h12/bll/themeReducer.ts","p2-homeworks/h12/HW12.tsx","p2-homeworks/h5/pages/Junior_plus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","p2-homeworks/h10/bll/loadingReducer.ts","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx"],"names":["module","exports","MessageFromUser","props","classesUsers","id","push","className","join","src","avatar","alt","name","message","time","state","users","Date","toLocaleString","Message","user","map","index","HW1","Affair","s","row","affair","priority","btn","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","a","content","body","buttons","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","addUserWhenPressEnter","inputClass","input","disabledButton","Boolean","buttonClass","button","disabled","valueOfButton","wrapper","block","value","onChange","onKeyPress","error__message","GreetingContainer","addUserCallback","setName","setError","trim","alert","length","e","currentTarget","event","key","HW3","setUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","text","HW4","setText","showAlert","setChecked","column","testSpanError","blue","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","style","height","padding","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","useEffect","hw6","undefined","PreJunior","Error404","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","HW11","value1","setValue1","value2","Junior","AlternativeSuperSelect","React","memo","tasks","active","setActive","hoverElID","setHoverElID","hoveredElement","find","t","selectedItem","tabIndex","select","onKeyUp","i","newEl","title","item","hover","onMouseEnter","initState","backgroundTheme","themes","HW12","useSelector","theme","dispatch","useDispatch","setTheme","useCallback","findTheme","payload","Junior_plus","PATH","Routes","path","exact","render","to","Header","onChangeHeader","classNameTrigger","header_trigger","right","left","classNameMenu","menu","header","list","HW5","App","ACTION_TYPES","window","location","hostname","match","isLoading","reducers","combineReducers","loading","action","IS_LOADING","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.14cf0fe4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__yPSQH\",\"list\":\"Header_list__2bhjw\",\"menu\":\"Header_menu__1uu0g\",\"header_trigger\":\"Header_header_trigger__3bbOT\",\"left\":\"Header_left__1extu\",\"right\":\"Header_right__GFU4f\",\"active\":\"Header_active__2xoym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Greeting_wrapper__2S18E\",\"block\":\"Greeting_block__3LE7D\",\"input\":\"Greeting_input__xXd6u\",\"button\":\"Greeting_button__rGav6\",\"disabled\":\"Greeting_disabled__1Vr0h\",\"error\":\"Greeting_error__2PbsC\",\"error__message\":\"Greeting_error__message__1ksms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"AlternativeSuperSelect_select__30h2k\",\"title\":\"AlternativeSuperSelect_title__2UgKC\",\"active\":\"AlternativeSuperSelect_active__iYKU6\",\"body\":\"AlternativeSuperSelect_body__7EjCT\",\"item\":\"AlternativeSuperSelect_item__9pGel\",\"hover\":\"AlternativeSuperSelect_hover__3jAYj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3BfMR\",\"column\":\"HW4_column__1XGtT\",\"testSpanError\":\"HW4_testSpanError__3952G\",\"button\":\"HW4_button__28iM9\",\"checkbox\":\"HW4_checkbox__VsJoP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Affairs_content__3uBW0\",\"body\":\"Affairs_body__VvfAq\",\"buttons\":\"Affairs_buttons__1-GTN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2EsKJ\",\"errorInput\":\"SuperInputText_errorInput__2tN_6\",\"error\":\"SuperInputText_error__3VZDG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3jCSD\",\"spanClassName\":\"SuperCheckbox_spanClassName__3eJTw\",\"text\":\"SuperCheckbox_text__3eiqG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hw6\":\"HW6_hw6__1zR8c\",\"btn\":\"HW6_btn__2pFdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HW12_title__2JEIL\",\"white\":\"HW12_white__1mfn7\",\"white-text\":\"HW12_white-text__mFOlX\",\"dark\":\"HW12_dark__3D45H\",\"dark-text\":\"HW12_dark-text__TevB5\",\"red\":\"HW12_red__2ngI8\",\"red-text\":\"HW12_red-text__I4RWo\",\"some\":\"HW12_some__3fj5C\",\"some-text\":\"HW12_some-text__V6vVk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Affair_row__MR0fe\",\"btn\":\"Affair_btn__3dFVz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__Fn-6G\",\"red\":\"SuperButton_red__3b36V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__27UEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__24JjV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Error404_content__1-v6e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2S_Re\"};","import React from 'react';\nimport './Message.css';\n\n\ntype propsType = {\n    key: number,\n    id: number,\n    avatar: string,\n    name: string,\n    message: string,\n    time: string\n}\n\nfunction MessageFromUser(props: propsType) {\n    const classesUsers: Array<string> = ['message'];\n    if (props.id === 0) {\n        classesUsers.push('left')\n    } else{\n        classesUsers.push('right')\n    }\n    return (\n        <div className={classesUsers.join(' ')}>\n            <div className=\"message__container\">\n                <div className=\"message__row\">\n                    <div className='message__image'>\n                        <img src={props.avatar} alt=\"\"/>\n                    </div>\n                    <div className=\"message__body\">\n                        <div className=\"message__name\">\n                            {props.name}\n                        </div>\n                        <div className=\"message__text\">\n                            {props.message}\n                        </div>\n                        <div className=\"message__time\">\n                            {props.time}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MessageFromUser\n","type UsersType = {\r\n    id:number,\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string,\r\n}\r\ntype RootStateType = {\r\n    users: Array<UsersType>\r\n}\r\nlet state: RootStateType = {\r\n    users: [\r\n        {\r\n            id:0,\r\n            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n            name: 'Kind girl',\r\n            message: 'Did you use npm?',\r\n            time: `${new Date().toLocaleString()}`,\r\n        },\r\n        {\r\n            id:1,\r\n            avatar: 'https://thumbs.dreamstime.com/b/%D0%B2%D0%BE%D0%BB%D0%BA-5578890.jpg',\r\n            name: 'Lonely wolf',\r\n            message: 'Yes. of course',\r\n            time: `${new Date().toLocaleString()}`,\r\n        },\r\n        {\r\n            id:0,\r\n            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n            name: 'Kind girl',\r\n            message: 'i understood',\r\n            time: `${new Date().toLocaleString()}`,\r\n        },\r\n        {\r\n            id:0,\r\n            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n            name: 'Kind girl',\r\n            message: 'You are a good boy!',\r\n            time: `${new Date().toLocaleString()}`,\r\n        },\r\n        {\r\n            id:1,\r\n            avatar: 'https://thumbs.dreamstime.com/b/%D0%B2%D0%BE%D0%BB%D0%BA-5578890.jpg',\r\n            name: 'Lonely wolf',\r\n            message: 'Have a nice day!',\r\n            time: `${new Date().toLocaleString()}`,\r\n        },\r\n    ],\r\n}\r\nexport default state;","import React from 'react';\r\nimport './Message.css'\r\nimport MessageFromUser from \"./MessageFromUser\";\r\nimport state from \"./state\";\r\n\r\n\r\nfunction Message() {\r\n    const user = state.users.map((user, index) => {\r\n        return (\r\n            <MessageFromUser\r\n                key={index}\r\n                id = {user.id}\r\n                avatar={user.avatar}\r\n                name={user.name}\r\n                message={user.message}\r\n                time={user.time}\r\n            />\r\n        )\r\n    })\r\n    return (\r\n        <div className='message__wrapper'>\r\n            {user}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React, {useState} from 'react';\nimport Message from \"./Message\";\nimport './Chat.css'\n\n\n\nfunction HW1() {\n    return (\n        <div className={'chat'}>\n            <h1 className=\"chat__title\">homeworks 1 should work (должно работать)</h1>\n            <div className=\"chat__container\">\n                <Message/>\n            </div>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affair.module.css'\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n         props.deleteAffairCallback(props.affair._id);\n    }\n\n    return (\n        <div className={s.row}>\n            <span>{props.affair.name}</span>\n            <span>{props.affair.priority}</span>\n            <button className={s.btn} onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = {\n    data: Array<AffairType>\n    setFilter: (value: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => props.setFilter('all');\n\n    const setHigh = () => props.setFilter('high');\n\n    const setMiddle = () => props.setFilter('middle');\n\n    const setLow = () => props.setFilter('low');\n\n    return (\n        <div className={s.content}>\n            <div className={s.body}>\n                {mappedAffairs}\n            </div>\n\n            <div className={s.buttons}>\n                <button onClick={setAll}>All</button>\n                <button onClick={setHigh}>High</button>\n                <button onClick={setMiddle}>Middle</button>\n                <button onClick={setLow}>Low</button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle';\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority: AffairPriorityType\n}\n\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === 'all') return affairs;\n    return affairs.filter(affair => affair.priority === filter);\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter(affair => affair._id !== _id);\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => (\n        setAffairs(deleteAffair(affairs, _id))\n    )\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n    addUserWhenPressEnter:(event:KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers,addUserWhenPressEnter} // деструктуризация пропсов\n) => {\n\n    const inputClass = error ? `${s.input} ${s.error}` : s.input;\n\n    const disabledButton = !Boolean(name);\n    const buttonClass = disabledButton ? `${s.button} ${s.disabled}` : s.button;\n\n    let valueOfButton = Boolean(name) ? 'add' : '';\n\n    return (\n        <div className={s.wrapper}>\n            <div className={s.block}>\n                <input\n                    value={name}\n                    onChange={setNameCallback}\n                    className={inputClass}\n                    onKeyPress={addUserWhenPressEnter}\n                />\n                <button\n                    onClick={addUser}\n                    className={buttonClass}\n                    disabled={disabledButton}\n                >{valueOfButton}</button>\n                <span>{totalUsers}</span>\n            </div>\n            <span className={s.error__message}>{error}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name:string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value);\n    }\n    const addUserWhenPressEnter = (event:KeyboardEvent<HTMLInputElement>) => event.key === 'Enter' ? addUser() : false;\n    const addUser = () => {\n        if(!name.trim()) {\n            setName('');\n            return setError('Введите корректное имя!');\n        }\n        addUserCallback(name);\n        setName('');\n        setError('');\n        alert(`Hello ${name} !`);\n    }\n\n    const totalUsers = users.length;\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            addUserWhenPressEnter = {addUserWhenPressEnter}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([])\n\n    const addUserCallback = (name: string) => {\n        setUsers([\n            ...users,\n            {\n                _id: v1(),\n                name: name\n            }\n        ])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            <GreetingContainer\n                users={users}\n                addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string //для стилизации ошибки\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange т.е если хочется использовать обычный onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value) //если будет пропс onChangeText\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = error ? ` ${s.errorInput}` : `${s.superInput} ${className}`\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}` //className - класс по умолчанию\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        /*if(onChangeChecked) {\n            onChangeChecked(e.currentTarget.checked)\n        }\n        if(onChange) {\n            onChange(e)\n        }*/\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            <span className={s.text}>{children && <span className={s.spanClassName}>{children}</span>}</span>\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent,KeyboardEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text.trim() ? '' : 'error'\n\n    const changeTitle = (e:ChangeEvent<HTMLInputElement>) => setText(e.currentTarget.value);\n    const addTitle = (e:KeyboardEvent<HTMLInputElement>) => e.key === 'Enter' && showAlert();\n\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text.trim()) // если нет ошибки показать текст\n            setText('');\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    value={text}\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                    error={error}\n                    spanClassName={s.testSpanError}\n                    onKeyPress={addTitle}\n                    onChange = {changeTitle}\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton\n                    className={s.button}\n                >\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                    className={s.button}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton\n                    className={s.button}\n                    disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                  some text{/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport s from './SuperEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nexport const SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n         setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.span} ${className ? className : ''}`;\n\n    return (\n        <div style ={{height: '30px' , padding: '10px 0px'}}>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        ✎\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </div>\n    )\n}\n\n\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\nexport type StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n\n","import React, {useEffect, useState} from 'react'\nimport {SuperEditableSpan} from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\nimport s from './HW6.module.css'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState<string>('editable-span-value', ''))\n    }\n    useEffect(() => {\n        setValue(restoreState<string>('editable-span-value', ''))\n    },[])\n\n    return (\n        <div className={s.hw6}>\n            <hr/>\n            homeworks 6\n\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton className={s.btn} onClick={save}>save</SuperButton>\n            <SuperButton className={s.btn} onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n","import React from 'react'\nimport s from './Error404.module.css'\n\n\n\nfunction Error404() {\n    return (\n        <div className={s.content}>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperRange.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n};\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e) // сохраняем старую функциональность\n\n        onChangeRange && onChangeRange(+e.currentTarget.value)\n    }\n\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\n\n    return (\n        <>\n            <input\n                type={'range'}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n        </>\n    )\n}\n\nexport default SuperRange\n","import React from 'react'\n\ntype SuperDoubleRangePropsType = {\n    onChangeRange?: (value: [number, number]) => void\n    value?: [number, number]\n    // min, max, step, disable, ...\n}\n\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\n    {\n        onChangeRange, value,\n        // min, max, step, disable, ...\n    }\n) => {\n    // сделать самому, можно подключать библиотеки\n\n    return (\n        <>\n            DoubleRange\n        </>\n    )\n}\n\nexport default SuperDoubleRange\n","import React, {useState} from 'react'\nimport SuperRange from './common/c7-SuperRange/SuperRange'\nimport SuperDoubleRange from './common/c8-SuperDoubleRange/SuperDoubleRange'\n\nfunction HW11() {\n    const [value1, setValue1] = useState(0)\n    const [value2, setValue2] = useState(100)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 11\n\n            {/*should work (должно работать)*/}\n            <div>\n                <span>{value1}</span>\n                <SuperRange\n                    value={value1}\n                    onChangeRange={setValue1}\n                />\n            </div>\n\n            <div>\n                <span>{value1}</span>\n                <SuperDoubleRange\n                    // сделать так чтоб value1 и value2 изменялось\n                />\n                <span>{value2}</span>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperRange/>*/}\n            {/*<AlternativeSuperDoubleRange/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW11\n","import React from 'react'\nimport HW7 from \"../../h7/HW7\";\nimport HW8 from \"../../h8/HW8\";\nimport HW9 from \"../../h9/HW9\";\nimport HW10 from \"../../h10/HW10\";\nimport HW11 from \"../../h11/HW11\";\nimport HW12 from \"../../h12/HW12\";\n\n\nfunction Junior() {\n    return (\n        <div>\n            {/*<HW7/>\n            <HW8/>\n            <HW9 />\n            <HW10 />*/}\n            <HW11 />\n        </div>\n    )\n}\n\nexport default Junior\n","import React, {useEffect, useState, KeyboardEvent} from 'react'\nimport {arrAlternativeType} from \"../../HW7\";\nimport s from './AlternativeSuperSelect.module.css'\n\n\ntype AlternativeSuperSelectType = {\n    value: any\n    tasks: arrAlternativeType[]\n    setValue: (value: string) => void\n}\nexport const AlternativeSuperSelect: React.FC<AlternativeSuperSelectType> = React.memo((\n    {\n        value,\n        tasks,\n        setValue\n    }) => {\n    const [active, setActive] = useState(false);\n    const [hoverElID, setHoverElID] = useState(value);\n\n    const hoveredElement = tasks.find(t => t.id === hoverElID);\n    const selectedItem = tasks.find(t => t.id === value);\n    const toggleSelect = () => {\n        setActive(!active)\n    }\n\n    useEffect(() => {\n        setHoverElID(value)\n    }, [value])\n\n    const onKeyUpHandler = (e: KeyboardEvent<HTMLDivElement>) => {\n        if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n            for (let i = 0; i < tasks.length; i++) {\n                if (tasks[i].id === hoverElID) {\n                    let newEl = e.key === 'ArrowUp'\n                        ? tasks[i - 1]\n                        : tasks[i + 1];\n                    if (newEl) {\n                        setValue(newEl.id)\n                    }\n                    return\n                }\n            }\n            if (!selectedItem) {\n                setValue(tasks[0].id)\n            }\n        }\n        if (e.key === 'Enter' || e.key === 'Escape') {\n            setActive(false)\n        }\n    }\n    return (\n        <div\n            tabIndex={0}\n            className={s.select}\n            onKeyUp={onKeyUpHandler}\n        >\n            <div\n                className={active ? `${s.title} ${s.active}` : s.title}\n                onClick={toggleSelect}\n            >\n                {selectedItem && selectedItem.title}\n            </div>\n            {\n                active &&\n                <div className={s.body}>\n                    {tasks.map(t => {\n                        const onClickHandler = () => {\n                            setValue(t.id);\n                            setActive(false)\n                        }\n                        return (\n                            <div\n                                className={t === hoveredElement ? `${s.item} ${s.hover}` : s.item}\n                                key={t.id}\n                                onClick={onClickHandler}\n                                onMouseEnter={() => setHoverElID(t.id)}\n                            >\n                                {t.title}\n                            </div>\n                        )\n                    })}\n                </div>\n            }\n        </div>\n    )\n})\n","export type ThemeType = {\n    id:string,\n    title: string\n}\nconst initState = {\n    backgroundTheme: {\n        id:'1',\n        title: 'white'\n    } as ThemeType,\n    themes: [\n        {\n            id:'1',\n            title: 'white'\n        },\n        {\n            id:'2',\n            title: 'dark'\n        },\n        {\n            id:'3',\n            title: 'red'\n        },\n        {\n            id:'4',\n            title: 'some'\n        },\n    ]as Array<ThemeType>\n};\ntype InitStateType = typeof initState\ntype ActionThemeReducerType = ChangeThemeType\nexport const themeReducer = (state:InitStateType = initState, action: ActionThemeReducerType): InitStateType => { // fix any\n    switch (action.type) {\n        case \"CHANGE-THEME\":\n            return {...state, backgroundTheme: {...action.payload}}\n        default: return state;\n    }\n};\ntype ChangeThemeType = {\n    type: 'CHANGE-THEME',\n    payload: {\n        id:string,\n        title: string\n    }\n}\nexport const changeThemeAC = (theme:ThemeType):ChangeThemeType => {\n    return {\n        type: 'CHANGE-THEME',\n        payload: {\n            ...theme\n        }\n    }as const\n};","import React, {useCallback, useState} from \"react\";\nimport s from \"./HW12.module.css\";\nimport {AlternativeSuperSelect} from \"../h7/common/c5-SuperSelect/AlternativeSuperSelect\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../h10/bll/store\";\nimport {changeThemeAC, ThemeType} from \"./bll/themeReducer\";\nimport {Dispatch} from \"redux\";\n\nfunction HW12() {\n    const backgroundTheme = useSelector<AppStoreType, ThemeType>(state => state.theme.backgroundTheme)\n    const themes = useSelector<AppStoreType, Array<ThemeType>>(state => state.theme.themes)\n\n    const dispatch = useDispatch<Dispatch>();\n\n    const setTheme = useCallback((id:string) => {\n        const findTheme = themes.find(t => t.id === id);\n        findTheme && dispatch(changeThemeAC(findTheme))\n    },[dispatch, themes])\n\n    return (\n        <div className={s[backgroundTheme.title]}>\n            <hr/>\n            <span className={`${s[backgroundTheme.title + '-text']} ${s.title}`}>\n                homeworks 12\n            </span>\n\n            <AlternativeSuperSelect\n                value={backgroundTheme.id}\n                tasks={themes}\n                setValue={setTheme}\n            />\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW12;\n","import React from 'react'\nimport HW12 from \"../../h12/HW12\";\n\n\nfunction Junior_plus() {\n    return (\n        <div>\n            <HW12 />\n        </div>\n    )\n}\n\nexport default Junior_plus\n","import React from 'react'\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport Junior_plus from \"./pages/Junior_plus\";\n\n\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus'\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR} render={() => <Junior />}/>\n                <Route path={PATH.JUNIOR_PLUS} render={() => <Junior_plus />}/>\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route path={'*'} render={() => <Error404 />}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React, {MouseEvent, useState} from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {PATH} from \"./Routes\";\nimport s from './Header.module.css'\n\n\nfunction Header() {\n    let[active, setActive] = useState(false)\n    const onChangeHeader = () => {\n        setActive(!active)\n    }\n    const classNameTrigger = active ? `${s.header_trigger} ${s.right}` : `${s.header_trigger} ${s.left}`;\n    const classNameMenu = active ? `${s.menu} ${s.active}` : `${s.menu}`;\n    return (\n        <div className={s.header}>\n            <ul className={active ? `${s.list} ${s.active}` : s.list }>\n                <li>\n                    <NavLink to={PATH.PRE_JUNIOR}>\n                        PRE_JUNIOR\n                    </NavLink>\n                </li>\n                <li>\n                    <NavLink to={PATH.JUNIOR}>\n                        JUNIOR\n                    </NavLink>\n                </li>\n                <li>\n                    <NavLink to={PATH.JUNIOR_PLUS}>\n                        JUNIOR-PLUS\n                    </NavLink>\n                </li>\n                <li className={classNameMenu} onClick={onChangeHeader}>\n                    Меню\n                </li>\n                <li\n                    className={classNameTrigger}\n                    onClick={onChangeHeader}\n                >\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\n\nfunction HW5() {\n    return (\n        <div>\n            <HashRouter>\n                <Header/>\n                <Routes/>\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React, {useState} from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\nimport Error404 from \"../../../p2-homeworks/h5/pages/Error404\";\nimport HW6 from \"../../../p2-homeworks/h6/HW6\";\nimport HW7 from \"../../../p2-homeworks/h7/HW7\";\n\nfunction App() {\n\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>\n            <HW4/>*/}\n            <HW5/>\n        </div>\n    )\n}\n\nexport default App\n","enum ACTION_TYPES {\n    IS_LOADING= 'isLoading/IS_LOADING',\n}\n\ntype InitStateType = {\n    isLoading:boolean\n}\nconst initState = {\n    isLoading:false\n}\nexport type ActionType = LoadingType\nexport const loadingReducer = (state:InitStateType = initState, action: ActionType): InitStateType => { // fix any\n    switch (action.type) {\n        case ACTION_TYPES.IS_LOADING:\n            return {...state, isLoading:action.isLoading}\n        default: return state\n    }\n}\n\ntype LoadingType = {\n    type: ACTION_TYPES.IS_LOADING,\n    isLoading:boolean\n}\nexport const loadingAC = (isLoading:boolean):LoadingType => {\n    return {\n        type: ACTION_TYPES.IS_LOADING,\n        isLoading,\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import {loadingReducer} from './loadingReducer'\nimport {combineReducers, createStore, Store} from \"redux\";\nimport {themeReducer} from \"../../h12/bll/themeReducer\";\n\nconst reducers = combineReducers({\n    loading: loadingReducer,\n    theme: themeReducer\n\n})\n\nconst store:Store<AppStoreType, any> = createStore(reducers)\n\nexport default store\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store // for dev\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport {Provider} from \"react-redux\";\nimport store from \"./p2-homeworks/h10/bll/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}><App/></Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}